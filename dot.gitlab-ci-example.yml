#
# Copyright 2017-2019 Martin Goellnitz.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Example starting point for a GitLab build file for CoreMedia DXP workspaces 
# to build a separate deploymeent script archive and maven artifact archive.
# 
# Relies on the following variables to be set:
#
# CoreMedia Maven Artifacts Repository User and Password:
#   CM_MAVEN_USER
#   CM_MAVEN_PASSWORD
#
# Target directories and host access:
#   INSTALL      - directory to store deployment data in
#   SOURCE       - directory to store deployment archive in
#   AIO_HOST     - name of the user and host to deploy to
#   AIO_KEY      - ssh key file to be used on host access
#   AIO_PASSWORD - ssh key archive file password for extraction
#   NODE         - name of the node definition JSON file for chef
#
image: provocon/coremedia-build:latest

stages:
  - build
  - test

# Needed for Extensions in GIT Submodules
variables:
  GIT_SUBMODULE_STRATEGY: recursive

# The artifacts sections in this file produce archives in archives, but due to 
# better compression this still results in approximately 35% smaller files to
# store and transfer on each build.

# Just an example to separate deployment scripts from artifact store - not used subsequently
deployment_scripts:
  stage: build
  script: 
  - cp -rdp global/deployment/chef chef-repo
  - rm -rf src
  - rm -rf target
  - cp -p global/deployment/chef/src/assembly/deploy.sh .
  - tar cvJf deployment-scripts.tar.xz chef-repo deploy.sh
  artifacts:
    name: chef-repo-${CI_COMMIT_REF_NAME}
    paths:
    - deployment-scripts.tar.xz
    expire_in: 3 days

# Generate and store deployment archive - could be modified to just hold the maven repository
coremedia_cms:
  stage: build
  script: 
  - mkdir /home/build
  - mkdir -p /home/build/.m2
  - mkdir -p /home/build/.cache
  - test -d yarn && mv yarn /home/build/.cache
  - cp workspace-configuration/maven-settings.xml /home/build/.m2/settings.xml
  - useradd -d /home/build build
  - chown -R build /home/build
  - mkdir -p ~/.m2
  - cp workspace-configuration/maven-settings.xml ~/.m2/settings.xml
  - mkdir -p repository
  - chown -R build repository
  - mkdir -p .remote-packages
  - chown -R build .remote-packages
  - rm -rf repository/com/coremedia/blueprint
  - echo "Repo size after cache extraction and artifacts transfer "
  - du -sh repository
  - du -sh .remote-packages
  - du -sh /home/build/.cache
  - find repository -type f| wc -l
  - find .remote-packages -type f| wc -l
  - find /home/build/.cache -type f| wc -l
  - sed -i -e 's/format.zip..format/format>tar<\/format/g' global/deployment/chef/src/assembly/deployment-archive.xml
  - chown -R build apps
  - chown -R build frontend
  - sudo -u build env PATH=$PATH CM_MAVEN_PASSWORD=$CM_MAVEN_PASSWORD CM_MAVEN_USER=$CM_MAVEN_USER CI_PROJECT_DIR=$CI_PROJECT_DIR JAVA_HOME=$JAVA_HOME mvn clean install -B -DskipTests=true -Dorg.slf4j.simpleLogger.defaultLogLevel=warn
  - cd global/deployment/chef
  - sudo -u build env PATH=$PATH CM_MAVEN_PASSWORD=$CM_MAVEN_PASSWORD CM_MAVEN_USER=$CM_MAVEN_USER CI_PROJECT_DIR=$CI_PROJECT_DIR JAVA_HOME=$JAVA_HOME mvn clean install -B -DskipTests=true -Dorg.slf4j.simpleLogger.defaultLogLevel=warn
  - cd ../../..
  - rm -rf repository/com/coremedia/blueprint
  - mv /home/build/.cache/yarn .
  - echo -n "Repo size after job "
  - du -sh repository
  - du -sh .remote-packages
  - du -sh yarn
  - find repository -type f| wc -l
  - find yarn -type f| wc -l
  - mv global/deployment/chef/target/deployment-archive.tar .
  - cat deployment-archive.tar | parallel --block 256m --pipe --recend '' -k xz -9 >deployment-archive.tar.xz
  - ls -l
  artifacts:
    name: deployment-archive-${CI_COMMIT_REF_NAME}
    paths:
    - deployment-archive.tar.xz
    expire_in: 3 days

# Simple All-In-One-Deployment from the deployment archive
deploy_cms:
  stage: test
  script:
  - ls -l
  - 7z x -p$AIO_PASSWORD ${AIO_KEY}.7z
  - export SSH="ssh -i ${AIO_KEY}.openssh -o StrictHostKeyChecking=no $AIO_HOST -C "
  - $SSH "test -d $INSTALL || mkdir -p $INSTALL"
  - $SSH "test -d $SOURCE || mkdir -p $SOURCE"
  - scp -i ${AIO_KEY}.openssh deployment-archive.tar.xz $AIO_HOST:$SOURCE/deployment-archive.tar.xz
  - $SSH "rm -rf $INSTALL/* ; cd $INSTALL ; tar xJf $SOURCE/deployment-archive.tar.xz"
  - $SSH "rm -f $SOURCE/deployment-archive.tar.xz"
  - $SSH "test -d /tmp/maven-repo || ln -s $INSTALL/maven-repo /tmp/maven-repo"
  - $SSH "test -f /tmp/content-users.zip || ln -s $INSTALL/content-users.zip /tmp/content-users.zip"
  - $SSH "if [ -f /etc/init.d/solr ] ; then service solr stop ; fi"
  - $SSH "rm -f /var/log/coremedia/*/*log*.txt /var/log/coremedia/*/*.log /var/log/coremedia/*/*.log.* /var/log/coremedia/*/*.out"
  - export CMS_RELEASE=$($SSH "cd $INSTALL/maven-repo ; ls com/coremedia/blueprint/cae-live-webapp|grep -v maven")
  - $SSH "sed -i -e  s/LATEST/$CMS_RELEASE/g $INSTALL/chef-repo/cookbooks/blueprint/recipes/_development.rb"
  - $SSH "sed -i -e  s/1-SNAPSHOT/$CMS_RELEASE/g $INSTALL/chef-repo/cookbooks/blueprint-base/attributes/default.rb"
  - $SSH "chef-solo --config $INSTALL/chef-repo/.chef/solo.rb --environment development --json-attributes $INSTALL/chef-repo/nodes/$NODE.json"
  - $SSH "rm -f /tmp/maven-repo /tmp/content-users.zip"
  dependencies:
  - coremedia_cms

cache:
  paths:
  - repository/
  - .remote-packages/
  - yarn/
